<Application x:Class="WPFClientDemo.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WPFClientDemo.ViewModels"
             xmlns:Views="clr-namespace:WPFClientDemo.Views"
             xmlns:Backgammon="clr-namespace:Backgammon;assembly=Backgammon"
             xmlns:converters="clr-namespace:WPFClientDemo.Converters"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
<!-- converters-->

        <converters:VisablityConverterForPieces  x:Key="PieceConverter" />
        <converters:ImageSourceCubeConverter x:Key="ImageSourceCubeConverter"/>
        <!---->

        <DataTemplate DataType="{x:Type  local:LoginViewModel}">
            <Views:LoginView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:SignUpViewModel}">
            <Views:SignUpView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:ContactListViewModel}">
            <Views:ContactListView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:ChatWindowViewModel}">
            <Views:ChatWIndowView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:GameWindowViewModel}">
            <Views:GameWindowView />
        </DataTemplate>
               <!--  templates for buttons-->  
        <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- default template for buttons-->
        <Style x:Key="MyFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid Margin="3 2">
                            <Rectangle Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                            <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ShadowStyle">
            <Setter Property="Control.Foreground" Value="LightGray" />
        </Style>

        <Style  TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="FontSize" Value="15px"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
            <Setter Property="Background" >
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                        <GradientStop Color="#FFFFD190" Offset="0.2"/>
                        <GradientStop Color="#FFF38630" Offset="0.85"/>
                        <GradientStop Color="#FFE0E4CC" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
        				BorderThickness="1"
        				Padding="4,2" 
        				BorderBrush="DarkGray" 
        				CornerRadius="3" 
        				Background="{TemplateBinding Background}">
                            <Grid >
                                <ContentPresenter HorizontalAlignment="Center" 
        	                           VerticalAlignment="Center" Name="contentShadow" 
        					Style="{StaticResource ShadowStyle}">
                                    <ContentPresenter.RenderTransform>
                                        <TranslateTransform X="1.0" Y="1.0" />
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                                <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" Name="content"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                                <Setter Property="Foreground" Value="#FFE0E4CC" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                            <GradientStop Color="#FFE0E4CC" Offset="0.35"/>
                                            <GradientStop Color="#FFF38630" Offset="0.95"/>
                                            <GradientStop Color="#FFFFD190" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="content" Property="RenderTransform" >
                                    <Setter.Value>
                                        <TranslateTransform Y="1.0" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.7" />
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- templates for backgammon-->
        <DataTemplate DataType="{x:Type Backgammon:Slot }">
            <StackPanel >
                <Rectangle Fill="Black" Width="30" Stroke="Black"  Visibility="Visible"/>
                <Ellipse Width="30" Height="30" Fill="Black"  Visibility="{Binding ConverterParameter=0 ,Path=BlackPieces,Converter={StaticResource PieceConverter}}"/>
                <Ellipse Width="30" Height="30" Fill="Black"  Visibility="{Binding ConverterParameter=1 ,Path=BlackPieces,Converter={StaticResource PieceConverter}}"/>
                <Ellipse Width="30" Height="30" Fill="Black"  Visibility="{Binding ConverterParameter=2 ,Path=BlackPieces,Converter={StaticResource PieceConverter}}"/>
                <Ellipse Width="30" Height="30" Fill="Black"  Visibility="{Binding ConverterParameter=3 ,Path=BlackPieces,Converter={StaticResource PieceConverter}}"/>
                <Ellipse Width="30" Height="30" Fill="Black"  Visibility="{Binding ConverterParameter=4 ,Path=BlackPieces,Converter={StaticResource PieceConverter}}"/>

                <Ellipse Width="30" Height="30" Fill="DarkGreen"  Visibility="{Binding ConverterParameter=0,Path= WhitePieces,Converter={StaticResource PieceConverter}}"/>
                <Ellipse Width="30" Height="30" Fill="DarkGreen"  Visibility="{Binding ConverterParameter=1,Path= WhitePieces,Converter={StaticResource PieceConverter}}"/>
                <Ellipse Width="30" Height="30" Fill="DarkGreen"  Visibility="{Binding ConverterParameter=2,Path= WhitePieces,Converter={StaticResource PieceConverter}}"/>
                <Ellipse Width="30" Height="30" Fill="DarkGreen"  Visibility="{Binding ConverterParameter=3,Path= WhitePieces,Converter={StaticResource PieceConverter}}"/>
                <Ellipse Width="30" Height="30" Fill="DarkGreen"  Visibility="{Binding ConverterParameter=4,Path= WhitePieces,Converter={StaticResource PieceConverter}}"/>


                <!--<Button  x:Name="button1" Style="{StaticResource TransparentStyle}" Uid="1"
                         Height="100" Width="100" >
                    <Image Width="199" Source="C:\Users\hen\Desktop\ClientSideTester\WPFClientDemo\Images\blackSlotImage.png"/>
                </Button>-->

            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type Backgammon:Step }">
            <Image Width="50" Height="50" Source="{Binding Value,Converter={StaticResource ImageSourceCubeConverter}}"/>
        </DataTemplate>

    </Application.Resources>
</Application>
